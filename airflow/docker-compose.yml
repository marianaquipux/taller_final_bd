x-airflow-common:
  &airflow-common
  build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    #AIRFLOW__POSTGRES_EXTERNAL__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:admin@192.168.80.14:5432/public  # Conexión PostgreSQL externa
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
  depends_on:
    - postgres

services:
  # Servicio PostgreSQL para la base de datos de Airflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    restart: always

  # Webserver de Airflow
  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080  # Puerto donde se expone el UI de Airflow
    container_name: airflow_webserver
    restart: always

  # Scheduler de Airflow
  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always

  # Inicialización de Airflow: crea el usuario admin y configura la base de datos
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - airflow users list || ( airflow db init &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow )
    restart: on-failure


volumes:
  postgres-volume:

