services:
  mongodb:
    image: mongo:latest
    container_name: mongo_container
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
    
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: salazarPostgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
    ports:
      - "5433:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: salazar
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_PUBLIC_KEY_RETRIEVAL: "true"
    ports:
      - "3307:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka1:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"  # Para la conexión externa
    expose:
      - "9093"  # Para la conexión interna entre contenedores
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9093,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
